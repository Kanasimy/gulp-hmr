Инструкция от O. Uzich при передаче этого хозяйства.

Для работы сборки на нужен gulp, он собирает наш js и css из мелких файлов, разделенных по смыслу.
В итоге мы получаем один сжатый файл js и один файл css, попутно оптимизируя их.
Для работы gulp нам нужен nodejs и npm

Ставим nodejs тут все просто, выбираем нужный установщик. Можно проверить что все поставилось, введя в командной строке node --version

У меня используется v8.9.1

    npm (это менеджер проектов - node package manager) ставится по умолчанию. Нужен он для установки gulp.
    Ставим gulp, в командной строке npm install --global gulp
    Заходим в папку проекта cd ~/navitel2018
    Вводим команду npm install с ее помощью мы установим все необходимые пакеты, процесс может занимать несколько минут
    Все! Можно собирать проект.

Немного о структуре проекта,
	
в папке src содержится файлы html с изначальной версткой, я там вносила небольшие правки.
В частности есть файл style.html где приведены примеры верстки, используемых плагинов на все случае жизни.
Если вы задумались как бы оформить, например список, загляните сперва сюда!

В папке src/assets/scss исходные стили сайта, которые собираются в файлы src/assets/css/main.css и src/assets/css/main.min.css.
На сайте используем сжатый  файл main.min.css.

Все изменения вносим в папке src/assets/scss и когда готово запускаем команду gulp build,
после этого можно залить обновленный файл по ftp /AVM/navitel--**/HEAD/DATA/www/avm_webapps/ROOT/assets/css

В папке src/assets/js содержатся исходные файлы js. Файл main.js - здесь есть основной js который используется на сайте, это вызовы плагинов, валидация и пр.

Файл vendor.js - Это сборный файл со всеми плагинами из папки plugins.
Для того, чтобы добавить новый плагин просто добавляем его в данную папку, по команде gulp build все плагины собираются в файл vendor.js и сжатый vendor.min.js.
Так же сжимается файл main.js в main.min.js. На рабочем сайте используем сжатые скрипты, в них убраны комментарии которые не нужны в итоговом скрипте.
Сейчас на тестовом используется main.js для простоты отладки.
